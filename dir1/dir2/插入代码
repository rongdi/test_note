<pre><code>&lt;template&gt;<br>  &lt;div class="fileList"&gt;<br>    &lt;div class="file-header"&gt;<br>      &lt;i class="el-icon-plus icon-action"<br>         v-show="showAdd"<br>         @click="addFile"&gt;&lt;/i&gt;<br>      &lt;i class="el-icon-unlock icon-action"<br>         v-show="showUnlock"<br>         @click="lockFile"&gt;&lt;/i&gt;<br>      &lt;i class="el-icon-lock icon-action"<br>         v-show="showLock"<br>         @click="unlockFile"&gt;&lt;/i&gt;<br>      &lt;i class="el-icon-delete icon-action"<br>         v-show="showDel"<br>         @click="delFile"&gt;&lt;/i&gt;<br>      &lt;!-- &lt;i class="el-icon-share"<br>         v-show="showShare"<br>         @click="shareFile"&gt;&lt;/i&gt; --&gt;<br>      &lt;i class="el-icon-refresh icon-action"<br>         @click="refresh"&gt;&lt;/i&gt;<br>    &lt;/div&gt;<br>    &lt;ul&gt;<br>      &lt;li v-for="(item, index) in list"<br>          :key="item.id"<br>          :class="{active: activeIndex === index}"<br>          @click="res=&gt;{ activeIndex = index; }"&gt;<br>        &lt;div v-if="item.id"&gt;<br>          &lt;p class="title"&gt;【{{item.name}}】&lt;/p&gt;<br>          &lt;p class="summary"&gt;{{item.summary}}&lt;/p&gt;<br>          &lt;p class="time"&gt;{{formatDate(item.modifyTime)}}&lt;/p&gt;<br>          &lt;input type="text"<br>                 :ref="`urlInput${index}`"<br>                 v-model="getListUrl"<br>                 style="display: none;" /&gt;<br>        &lt;/div&gt;<br>        &lt;div v-else&gt;<br>          &nbsp;<br>        &lt;/div&gt;<br>      &lt;/li&gt;<br>    &lt;/ul&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br>import Axios from 'axios';<br>import { formatDateTime } from '../../../assets/js';<br>import { url } from '../assets/js';<br>export default {<br>  props: {<br>    dirId: [String, undefined, null],<br>    disabled: [Boolean]<br>  },<br>  data () {<br>    return {<br>      list: [],<br>      activeIndex: null,<br>    }<br>  },<br>  computed: {<br>    getListUrl () {<br>      return `${url.fileList}?dirId=${this.dirId}`;<br>    },<br>    showAdd () {<br>      const list = this.list;<br>      return !list || !list[0] || list[0].id<br>    },<br>    isDraft () {<br>      const { activeIndex, list } = this.$data;<br>      return !list[activeIndex].id;<br>    },<br>    showUnlock () {<br>      return this.activeIndex !== null &amp;&amp; !this.disabled &amp;&amp; !this.isDraft;<br>    },<br>    showLock () {<br>      return this.activeIndex !== null &amp;&amp; this.disabled &amp;&amp; !this.isDraft;<br>    },<br>    showDel () {<br>      const { activeIndex } = this.$data;<br>      return activeIndex !== null<br>    },<br>    showShare () {<br>      const { activeIndex } = this.$data;<br>      return activeIndex !== null &amp;&amp; !this.isDraft;<br>    }<br>  },<br>  methods: {<br>    // 获取文件列表<br>    getList (isRefresh) {<br>      return Axios.get(this.getListUrl).then(res =&gt; {<br>        this.list = res.data;<br>        if (!isRefresh || !this.list[0]) {<br>          this.activeIndex = null;<br>        }<br>        return this.list[this.activeIndex] || this.list[0]<br>      });<br>    },<br>    // 格式化时间<br>    formatDate (date) {<br>      return formatDateTime(date);<br>    },<br>    // 新增文件<br>    addFile () {<br>      this.list.unshift({});<br>      this.activeIndex = -1;<br>    },<br>    // 设置文件可编辑<br>    unlockFile () {<br>      this.emitData(false);<br>    },<br>    // 锁定文件<br>    lockFile () {<br>      this.emitData(true);<br>    },<br>    // 删除文件<br>    delFile () {<br>      if (this.isDraft) {<br>        this.list.shift();<br>        this.activeIndex = -1;<br>      } else {<br>        const { list, activeIndex } = this.$data;<br>        const { id, name } = list[activeIndex];<br>        this.$confirm(`确认删除笔记【${name}】吗？`, null, {<br>          type: 'warning'<br>        }).then(res =&gt; {<br>          Axios.post(url.fileRemove, { fileId: id }, {<br>            contentType: 'form'<br>          }).then(res =&gt; {<br>            this.$message({<br>              showClose: true,<br>              message: res.msg,<br>              type: res.code === 200 ? 'success' : 'error'<br>            });<br>            this.getList();<br>            this.$emit('showContent', {})<br>          })<br>        }).catch(() =&gt; {<br>        })<br>      }<br>    },<br>    // 分享<br>    shareFile () {<br>      const obj = this.$refs[`urlInput${this.activeIndex}`][0];<br>      obj.select();<br>      const js = obj.createTextRange();<br>      js.execCommand("Copy")<br>      this.$message({<br>        showClose: true,<br>        message: '复制成功',<br>        type: 'success'<br>      });<br>    },<br>    // 刷新<br>    refresh () {<br>      return this.getList(true);<br>    },<br>    emitData (disabled) {<br>      this.$emit('showContent', { data: this.list[this.activeIndex], disabled: disabled });<br>    },<br>  },<br>  watch: {<br>    dirId (n) {<br>      this.getList();<br>    },<br>    activeIndex (n) {<br>      if (n === null) return;<br>      if (n === -1) {<br>        this.activeIndex = 0;<br>      } else {<br>        this.emitData(this.disabled);<br>      }<br><br>    }<br>  }<br>}<br>&lt;/script&gt;<br>&lt;style scoped lang='less'&gt;<br>@border: 1px solid #dfdfdf;<br>.fileList {<br>  border-right: @border;<br>  ul {<br>    overflow-y: auto;<br>    margin-left: 8px;<br>    padding-bottom: 40px;<br>    height: 100%;<br>    box-sizing: border-box;<br>  }<br>  li {<br>    padding: 8px 8px 8px 0;<br>    border-bottom: @border;<br>    min-height: 72px;<br>    cursor: pointer;<br>    box-sizing: border-box;<br>    &amp;.active {<br>      background: rgb(247, 207, 93);<br>    }<br>    p {<br>      margin: 0;<br>    }<br>    .title {<br>      color: #323232;<br>    }<br>    .summary {<br>      padding-left: 9px;<br>      color: #888;<br>    }<br>    .time {<br>      color: #888;<br>      text-align: right;<br>      font-size: 12px;<br>    }<br>  }<br>  .file-header {<br>    border-bottom: @border;<br>    text-align: right;<br>  }<br>}<br>&lt;/style&gt;</code></pre><p><br></p>